{"ast":null,"code":"var _jsxFileName = \"/Users/s_varun/calculator/src/components/Display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport classes from './Display.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display(props) {\n  _s();\n\n  const inputData = useRef(null);\n  useEffect(() => {\n    if (inputData.current) {\n      if (props.val != null) inputData.current.value += props.val.toString();\n      check();\n      var startPos = inputData.current.selectionStart;\n      console.log(startPos);\n    }\n  }, [props.upd]);\n\n  function check(e) {\n    const x = e ? e.target : inputData.current;\n    console.log(inputData.current.value);\n\n    if (x.value.length > 15) {\n      x.style.fontSize = (13 - x.value.length / 4).toString() + \"vw\";\n    } else {\n      x.style.fontSize = \"11vw\";\n    }\n\n    if (parseInt(x.style.fontSize) < 2) {\n      x.style.fontSize = \"2vw\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputData,\n        type: \"text\",\n        className: classes.text,\n        onChange: check,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Display, \"hSCvMzkl855Yf7Uubptk17XkSAc=\");\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/s_varun/calculator/src/components/Display.js"],"names":["React","useEffect","useRef","classes","Display","props","inputData","current","val","value","toString","check","startPos","selectionStart","console","log","upd","e","x","target","length","style","fontSize","parseInt","container","form","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EACA;AAAA;;AAEE,QAAMC,SAAS,GAACJ,MAAM,CAAC,IAAD,CAAtB;AACAD,EAAAA,SAAS,CAAC,MAAI;AAAE,QAAGK,SAAS,CAACC,OAAb,EAAqB;AACnC,UAAGF,KAAK,CAACG,GAAN,IAAW,IAAd,EACAF,SAAS,CAACC,OAAV,CAAkBE,KAAlB,IAA0BJ,KAAK,CAACG,GAAP,CAAYE,QAAZ,EAAzB;AACAC,MAAAA,KAAK;AACL,UAAIC,QAAQ,GAAGN,SAAS,CAACC,OAAV,CAAkBM,cAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAED;AAAC,GAPO,EAON,CAACP,KAAK,CAACW,GAAP,CAPM,CAAT;;AAUA,WAASL,KAAT,CAAeM,CAAf,EAAiB;AACf,UAAMC,CAAC,GAACD,CAAC,GAACA,CAAC,CAACE,MAAH,GAAUb,SAAS,CAACC,OAA7B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAS,CAACC,OAAV,CAAkBE,KAA9B;;AACD,QAAGS,CAAC,CAACT,KAAF,CAAQW,MAAR,GAAe,EAAlB,EACA;AACGF,MAAAA,CAAC,CAACG,KAAF,CAAQC,QAAR,GAAmB,CAAC,KAAIJ,CAAC,CAACT,KAAF,CAAQW,MAAR,GAAe,CAApB,EAAwBV,QAAxB,KAAmC,IAAtD;AACF,KAHD,MAII;AACHQ,MAAAA,CAAC,CAACG,KAAF,CAAQC,QAAR,GAAmB,MAAnB;AACA;;AACD,QAAIC,QAAQ,CAACL,CAAC,CAACG,KAAF,CAAQC,QAAT,CAAR,GAA6B,CAAjC,EAAoC;AACnCJ,MAAAA,CAAC,CAACG,KAAF,CAAQC,QAAR,GAAkB,KAAlB;AACC;AACF;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACqB,SAAxB;AAAA,2BACH;AAAM,MAAA,SAAS,EAAErB,OAAO,CAACsB,IAAzB;AAAA,6BACI;AAAO,QAAA,GAAG,EAAEnB,SAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,SAAS,EAAEH,OAAO,CAACuB,IAAtD;AAA4D,QAAA,QAAQ,EAAEf,KAAtE;AAA6E,QAAA,SAAS;AAAtF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD;;GAjCQP,O;;KAAAA,O;AAkCT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport classes from './Display.module.css'\r\n\r\n\r\n\r\n\r\nfunction Display(props)\r\n{\r\n  \r\n  const inputData=useRef(null);\r\n  useEffect(()=>{ if(inputData.current){\r\n    if(props.val!=null)\r\n    inputData.current.value+=(props.val).toString();\r\n    check();\r\n    var startPos = inputData.current.selectionStart;\r\n    console.log(startPos);\r\n    \r\n  }},[props.upd])\r\n\r\n\r\n  function check(e){\r\n    const x=e?e.target:inputData.current;\r\n    console.log(inputData.current.value)\r\n   if(x.value.length>15)\r\n   {\r\n      x.style.fontSize = (13-(x.value.length/4)).toString()+\"vw\";\r\n   }\r\n   else{\r\n    x.style.fontSize = \"11vw\";\r\n   }\r\n   if (parseInt(x.style.fontSize) < 2) {\r\n    x.style.fontSize= \"2vw\" ;   \r\n    }\r\n  }\r\n  return <div className={classes.container}>\r\n      <form className={classes.form}>\r\n          <input ref={inputData} type=\"text\" className={classes.text} onChange={check} autoFocus/>\r\n      </form>\r\n  </div>  \r\n}\r\nexport default Display;"]},"metadata":{},"sourceType":"module"}